name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist

  dockerize:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/vite-app:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/vite-app:latest
          cache-to: type=inline

  deploy-k8s:
    needs: dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      
      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      
      - name: Verify kubectl configuration
        run: kubectl cluster-info
      
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/vite-app vite-app=${{ secrets.DOCKERHUB_USERNAME }}/vite-app:latest --namespace=default
          kubectl rollout status deployment/vite-app --namespace=default
      
      - name: Expose Service (if not already exposed)
        run: |
          kubectl get service vite-app-service --namespace=default || \
          kubectl expose deployment/vite-app --type=LoadBalancer --port=80 --target-port=80 --name=vite-app-service --namespace=default
      
      - name: Get Service URL
        run: |
          echo "Service exposed at:"
          kubectl get service vite-app-service --namespace=default -o jsonpath='{.status.loadBalancer.ingress[0].ip}'